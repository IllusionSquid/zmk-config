/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define QWERTY 1
#define SPECIAL 2
#define FUNC 3
#define GAME 4

/ {
    combos {
        compatible = "zmk,combos";
        combo_qwerty {
            timeout-ms = <50>;
            key-positions = <31 34>;
            bindings = <&tog QWERTY>;
        };
        combo_game {
            timeout-ms = <50>;
            key-positions = <30 31 34 35>;
            bindings = <&tog GAME>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		// This is a sample keymap intended to be replaced with your own
		base_layer {
            // |    Q    |    W    |    F    |    P    |    B    |                                          |    J    |    L    |    U    |    Y    |    ;    |
            // |    A    |    R    |    S    |    T    |    G    |                                          |    M    |    N    |    E    |    I    |    O    |
            // |    Z    |    X    |    C    |    D    |    V    |                                          |    K    |    H    |    ,    |    .    |    /    |
            //                                    |   Tab   |  Space  |  Ctrl   |            |   Alt   |  BSPC   |  ENTER  |
			bindings = <
				&kp Q     &kp W     &kp F     &kp P     &kp B                               &kp J     &kp L     &kp U     &kp Y     &kp SEMI
				&mt LSHIFT A     &kp R     &kp S     &kp T     &kp G                               &kp M     &kp N     &kp E     &kp I     &mt RSHIFT O
				&kp Z     &kp X     &kp C     &kp D     &kp V                               &kp K     &kp H     &kp COMMA &kp DOT   &kp SLASH
				                              &kp TAB   &lt SPECIAL SPACE &kp LCTRL        &kp LALT &lt FUNC BSPC  &kp ENTER
			>;
		};

        qwerty_layer {
            // |    Q    |    W    |    E    |    R    |    T    |                                          |    Y    |    U    |    I    |    O    |    P    |
            // |    A    |    S    |    D    |    F    |    G    |                                          |    H    |    J    |    K    |    L    |    ;    |
            // |    Z    |    X    |    C    |    V    |    B    |                                          |    N    |    M    |    ,    |    .    |    /    |
            //                                    |         |         |         |            |         |         |         |
			bindings = <
				&kp Q     &kp W     &kp E     &kp R     &kp T                               &kp Y     &kp U     &kp I     &kp O     &kp P
				&kp A     &kp S     &kp D     &kp F     &kp G                               &kp H     &kp J     &kp K     &kp L     &kp SEMI
				&kp Z     &kp X     &kp C     &kp V     &kp B                               &kp N     &kp M     &kp COMMA &kp DOT   &kp SLASH
				                              &trans    &trans    &trans          &trans    &trans    &trans
			>;
		};
        
        special_layer {
            // |         |    #    |    ~    |    `    |         |                                          |         |         |         |         |         |
            // |    !    |    @    |    (    |    )    |    *    |                                          |    =    |    {    |    }    |    [    |    ]    |
            // |    $    |    %    |    &    |    -    |         |                                          |    ^    |    +    |    _    |    |    |    \    |
            //                                    |   Tab   |  Space  |  SW15   |            |  SW33   |  BSPC   |  ENTER  |
			bindings = <
				&trans       &kp HASH      &kp TILDE     &kp GRAVE     &trans                       &trans     &trans     &trans     &trans     &trans
				&kp EXCL     &kp AT        &kp LPAR      &kp RPAR     &kp ASTRK                       &kp EQUAL     &kp LBRC     &kp RBRC     &kp LBKT     &kp RBKT
				&kp DLLR     &kp PRCNT     &kp AMPS      &kp MINUS     &trans                       &kp CARET     &kp PLUS     &kp UNDER &kp PIPE   &kp BSLH
				                              &trans   &trans &trans        &trans &trans &trans
			>;
		};

        function_layer {
            // |         |         |         |   F11   |         |                                          |         |   F12   |         |         |         |
            // |    1    |    2    |    3    |    4    |    5    |                                          |    6    |    7    |    8    |    9    |    0    |
            // |   F1    |   F2    |   F3    |   F4    |   F5    |                                          |   F6    |   F7    |   F8    |   F9    |   F10   |
            //                                    |   Tab   |  Space  |  SW15   |            |  SW33   |  BSPC   |  ENTER  |
			bindings = <
				&trans    &trans    &trans    &kp F11   &trans                            &trans    &kp F12   &trans    &trans    &trans
				&kp N1    &kp N2    &kp N3    &kp N4    &kp N5                            &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
				&kp F1    &kp F2    &kp F3    &kp F4    &kp F5                            &kp F6    &kp F7    &kp F8    &kp F9    &kp F10
				                              &trans    &trans    &trans        &trans    &trans    &trans
			>;
		};

        game_layer {
            // |   Tab   |    Q    |    W    |    R    |    T    |                                          |         |   KP7   |   KP8   |   KP9   |         |
            // |  SHIFT  |    A    |    S    |    D    |    F    |                                          |    6    |   KP4   |   KP5   |   KP6   |    0    |
            // |  Ctrl   |    Z    |    X    |    C    |    V    |                                          |   F6    |   KP1   |   KP2   |   KP3   |   F10   |
            //                                    |   Alt   |  Space  |    G    |            |  SW33   |  BSPC   |  ENTER  |
			bindings = <
				&kp Q     &kp W     &kp F     &kp P     &kp B                       &trans     &kp KP_N7  &kp KP_N8  &kp KP_N9  &trans
				&kp A     &kp R     &kp S     &kp T     &kp G                       &trans     &kp KP_N4  &kp KP_N5  &kp KP_N6  &trans
				&kp Z     &kp X     &kp C     &kp D     &kp V                       &trans     &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans
				                              &kp LALT  &kp SPACE &kp G        &kp E &kp BSPC &kp ENTER
			>;
		};
	};
};