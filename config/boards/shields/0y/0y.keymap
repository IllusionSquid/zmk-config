/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define QWERTY 1
#define NAV  2
#define SPECIAL 3
#define FUNC 4
#define GAME 5
#define GAMETWO 6
#define TWOROW 7
#define BTLAYER 8

#define TWOROW_MS 50

/ {
    combos {
        compatible = "zmk,combos";
        combo_panic {
            timeout-ms = <50>;
            key-positions = <31 34>;
            bindings = <&kp ESC>;
        };
        combo_qwerty {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&tog QWERTY>;
        };
        combo_game {
            timeout-ms = <50>;
            key-positions = <30 31 34 35>;
            bindings = <&tog GAME>;
        };
        combo_tworow {
            timeout-ms = <50>;
            key-positions = <31 32 33 34>;
            bindings = <&tog TWOROW>;
        };


        combo_a {
            timeout-ms = <TWOROW_MS>;
            key-positions = <10 20>;
            bindings = <&mt LSHIFT A>;
            layers = <TWOROW>;
        };
        combo_r {
            timeout-ms = <TWOROW_MS>;
            key-positions = <11 21>;
            bindings = <&kp R>;
            layers = <TWOROW>;
        };
        combo_s {
            timeout-ms = <TWOROW_MS>;
            key-positions = <12 22>;
            bindings = <&kp S>;
            layers = <TWOROW>;
        };
        combo_t {
            timeout-ms = <TWOROW_MS>;
            key-positions = <13 23>;
            bindings = <&lt NAV T>;
            layers = <TWOROW>;
        };
        combo_g {
            timeout-ms = <TWOROW_MS>;
            key-positions = <14 24>;
            bindings = <&kp G>;
            layers = <TWOROW>;
        };

        combo_m {
            timeout-ms = <TWOROW_MS>;
            key-positions = <15 25>;
            bindings = <&kp M>;
            layers = <TWOROW>;
        };
        combo_n {
            timeout-ms = <TWOROW_MS>;
            key-positions = <16 26>;
            bindings = <&kp N>;
            layers = <TWOROW>;
        };
        combo_e {
            timeout-ms = <TWOROW_MS>;
            key-positions = <17 27>;
            bindings = <&kp E>;
            layers = <TWOROW>;
        };
        combo_i {
            timeout-ms = <TWOROW_MS>;
            key-positions = <18 28>;
            bindings = <&kp I>;
            layers = <TWOROW>;
        };
        combo_o {
            timeout-ms = <TWOROW_MS>;
            key-positions = <19 29>;
            bindings = <&mt RSHIFT O>;
            layers = <TWOROW>;
        };
    };

    // macros {
    //     scr_shot: scr_shot {
    //         label = "scr_shot";
    //         compatible = "zmk,behavior-macro";
    //         #binding-cells = <0>;
    //         bindings
    //             = <&macro_press &kp LSHFT>
    //             , <&macro_press &kp LGUI>
    //             , <&macro_tap &kp S>
    //             , <&macro_release &kp LSHFT>
    //             , <&macro_release &kp LGUI>
    //             ;
    //     };
    // };

	keymap {
		compatible = "zmk,keymap";

		// This is a sample keymap intended to be replaced with your own
		base_layer {
            // |    Q    |    W    |    F    |    P    |    B    |                                          |    J    |    L    |    U    |    Y    |    ;    |
            // |    A    |    R    |    S    |    T    |    G    |                                          |    M    |    N    |    E    |    I    |    O    |
            // |    Z    |    X    |    C    |    D    |    V    |                                          |    K    |    H    |    ,    |    .    |    /    |
            //                                    |   Tab   |  Space  |  Ctrl   |            |   Alt   |  BSPC   |  ENTER  |
			bindings = <
				&kp Q        &kp W     &kp F     &kp P     &kp B                               &kp J     &kp L     &kp U     &kp Y     &kp SEMI
				&mt LSHIFT A &kp R     &kp S     &lt NAV T &kp G                               &kp M     &lt BTLAYER N     &kp E     &kp I     &mt RSHIFT O
				&kp Z        &kp X     &kp C     &kp D     &kp V                               &kp K     &kp H     &kp COMMA &kp DOT   &kp SLASH
				                              &mt LGUI TAB   &lt SPECIAL SPACE &kp LCTRL        &kp LALT &lt FUNC BSPC  &kp ENTER
			>;
		};

        qwerty_layer {
            // |    Q    |    W    |    E    |    R    |    T    |                                          |    Y    |    U    |    I    |    O    |    P    |
            // |    A    |    S    |    D    |    F    |    G    |                                          |    H    |    J    |    K    |    L    |    ;    |
            // |    Z    |    X    |    C    |    V    |    B    |                                          |    N    |    M    |    ,    |    .    |    /    |
            //                                    |         |         |         |            |         |         |         |
			bindings = <
				&kp Q     &kp W     &kp E     &kp R     &kp T                               &kp Y     &kp U     &kp I     &kp O     &kp P
				&mt LSHIFT A &kp S     &kp D     &lt NAV F     &kp G                               &kp H     &kp J     &kp K     &kp L      &mt RSHIFT SEMI
				&kp Z     &kp X     &kp C     &kp V     &kp B                               &kp N     &kp M     &kp COMMA &kp DOT   &kp SLASH
				                              &trans    &trans    &trans          &trans    &trans    &trans
			>;
		};

        nav_layer {
            // |         |         |         |         |         |                                          |         |         |         |         |         |
            // |         |         |         |   "T"   |         |                                          |         |   LEFT  |    UP   |   DOWN  |  RIGHT  |
            // |         |         |         |         |         |                                          |         |         |         |         |         |
            //                                    |         |         |         |            |         |         |         |
			bindings = <
				&trans   &trans     &trans     &trans     &trans                       &trans     &trans    &trans    &trans  &trans
				&trans   &trans     &trans     &trans     &trans                       &trans     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT
				&trans   &trans     &trans     &trans     &trans                       &trans     &trans    &trans    &trans  &trans
				                              &trans  &trans &trans        &trans &trans &trans
			>;
		};
        
        special_layer {
            // |         |    #    |    ~    |    `    |         |                                          |         |         |    "    |    '    |         |
            // |    !    |    @    |    (    |    )    |    *    |                                          |    =    |    {    |    }    |    [    |    ]    |
            // |    $    |    %    |    &    |    -    |         |                                          |    ^    |    +    |    _    |    |    |    \    |
            //                                    |   Tab   |  Space  |  Ctrl   |            |  Alt   |  BSPC   |  ENTER  |
			bindings = <
				&trans       &kp HASH      &kp TILDE     &kp GRAVE     &trans                       &trans        &trans       &kp DQT      &kp SQT    &trans
				&kp EXCL     &kp AT        &kp LPAR      &kp RPAR      &kp ASTRK                    &kp EQUAL     &kp LBRC     &kp RBRC     &kp LBKT   &kp RBKT
				&kp DLLR     &kp PRCNT     &kp AMPS      &kp MINUS     &trans                       &kp CARET     &kp PLUS     &kp UNDER    &kp PIPE   &kp BSLH
				                                                &trans   &trans &trans        &trans &trans &trans
			>;
		};

        function_layer {
            // |         |         |         |   F11   |         |                                          |         |   F12   |         |         |         |
            // |    1    |    2    |    3    |    4    |    5    |                                          |    6    |    7    |    8    |    9    |    0    |
            // |   F1    |   F2    |   F3    |   F4    |   F5    |                                          |   F6    |   F7    |   F8    |   F9    |   F10   |
            //                                    |   Tab   |  Space  |  Ctrl   |            |  Alt   |  BSPC   |  ENTER  |
			bindings = <
				&trans    &trans    &trans    &kp F11   &trans                            &trans    &kp F12   &trans    &trans    &trans
				&kp N1    &kp N2    &kp N3    &kp N4    &kp N5                            &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
				&kp F1    &kp F2    &kp F3    &kp F4    &kp F5                            &kp F6    &kp F7    &kp F8    &kp F9    &kp F10
				                              &trans    &trans    &trans        &trans    &trans    &trans
			>;
		};

        game_layer {
            // |   Tab   |    Q    |    X    |    E    |    R    |                                          |         |   KP7   |   KP8   |   KP9   |         |
            // |  SHIFT  |    A    |    W    |    D    |    F    |                                          |         |   KP4   |   KP5   |   KP6   |         |
            // |  Ctrl   |    Z    |    S    |    C    |    V    |                                          |         |   KP1   |   KP2   |   KP3   |         |
            //                                    |   Alt   |  Space  |    G    |            |    Y    |  BSPC   |  ENTER  |
			bindings = <
				&kp TAB     &kp Q     &kp X     &kp E     &kp R                       &trans     &kp KP_N7  &kp KP_N8  &kp KP_N9  &trans
				&kp LSHIFT  &kp A     &kp W     &kp D     &kp F                       &trans     &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp O
				&kp LCTRL   &kp Z     &kp S     &kp C     &kp V                       &trans     &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans
				                              &kp LALT  &kp SPACE &lt GAMETWO G        &kp Y &kp BSPC &kp ENTER
			>;
		};

        game_layer_two {
            // |   Tab   |    1    |    2    |    3    |    4    |                                          |         |   KP7   |   KP8   |   KP9   |  Insert |
            // |  SHIFT  |    A    |    W    |    D    |    8    |                                          |         |   KP4   |   KP5   |   KP6   |  CapsL  |
            // |  Ctrl   |    5    |    S    |    6    |    7    |                                          |         |   KP1   |   KP2   |   KP3   |         |
            //                                    |   Alt   |  Space  |   "G"   |            |  SW33   |  BSPC   |  ENTER  |
			bindings = <
				           &kp N1     &kp N2     &kp N3     &kp N4                      &trans  &trans  &trans  &trans  &kp INSERT
				&trans  &trans     &trans     &trans     &kp N8                         &trans  &trans  &trans  &trans  &kp CAPSLOCK
				&trans   &kp N5     &trans     &kp N6     &kp N7                        &trans  &trans  &trans  &trans  &trans
				                              &trans  &trans &trans        &trans  &trans  &trans
			>;
		};

        two_row {
            // Middle row here is chorded between the middle row and lower row on the actual keyboard
            // |    Q    |    W    |    F    |    P    |    B    |                                          |    J    |    L    |    U    |    Y    |    ;    |
            // |    A    |    R    |    S    |    T    |    G    |                                          |    M    |    N    |    E    |    I    |    O    |
            // |    Z    |    X    |    C    |    D    |    V    |                                          |    K    |    H    |    ,    |    .    |    /    |
            //                                    |   Tab   |  Space  |  Ctrl   |            |   Alt   |  BSPC   |  ENTER  |
			bindings = <
				&mt LSHIFT A &kp R     &kp S     &lt NAV T &kp G                               &kp M     &kp N     &kp E     &kp I     &mt RSHIFT O
				&kp Q        &kp W     &kp F     &kp P     &kp B                               &kp J     &kp L     &kp U     &kp Y     &kp SEMI
				&kp Z        &kp X     &kp C     &kp D     &kp V                               &kp K     &kp H     &kp COMMA &kp DOT   &kp SLASH
				                              &mt LGUI TAB   &lt SPECIAL SPACE &kp LCTRL        &kp LALT &lt FUNC BSPC  &kp ENTER
			>;
		};

        bt_nav_layer {
            // |         |         |         |         |         |                                          |         |         |         |         |         |
            // |  BTPF0  |  BTFP1  |  BTPF2  |         |         |                                          |         |   "N"   |         |         |         |
            // |         |         |         |         |         |                                          |         |         |         |         |         |
            //                                    |         |         |         |            |         |         |         |
			bindings = <
				&trans          &trans          &trans          &trans     &bt BT_CLR                   &trans     &trans    &trans    &trans  &trans
				&bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &trans     &trans                       &trans     &trans    &trans    &trans  &trans
				&trans          &trans          &trans          &trans     &trans                       &trans     &trans    &trans    &trans  &trans
				                                                    &trans  &trans &trans        &trans &trans &trans
			>;
		};
	};
};